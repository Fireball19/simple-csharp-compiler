/* This file was generated by SableCC (http://www.sablecc.org/). */

package sablecc.parser;

import sablecc.node.*;
import sablecc.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTUsingSymbol(@SuppressWarnings("unused") TUsingSymbol node)
    {
        this.index = 0;
    }

    @Override
    public void caseTNamespaceSymbol(@SuppressWarnings("unused") TNamespaceSymbol node)
    {
        this.index = 1;
    }

    @Override
    public void caseTClassSymbol(@SuppressWarnings("unused") TClassSymbol node)
    {
        this.index = 2;
    }

    @Override
    public void caseTPublicSymbol(@SuppressWarnings("unused") TPublicSymbol node)
    {
        this.index = 3;
    }

    @Override
    public void caseTStaticSymbol(@SuppressWarnings("unused") TStaticSymbol node)
    {
        this.index = 4;
    }

    @Override
    public void caseTReturnSymbol(@SuppressWarnings("unused") TReturnSymbol node)
    {
        this.index = 5;
    }

    @Override
    public void caseTMainSymbol(@SuppressWarnings("unused") TMainSymbol node)
    {
        this.index = 6;
    }

    @Override
    public void caseTConsoleSymbol(@SuppressWarnings("unused") TConsoleSymbol node)
    {
        this.index = 7;
    }

    @Override
    public void caseTWriteLineSymbol(@SuppressWarnings("unused") TWriteLineSymbol node)
    {
        this.index = 8;
    }

    @Override
    public void caseTArgsSymbol(@SuppressWarnings("unused") TArgsSymbol node)
    {
        this.index = 9;
    }

    @Override
    public void caseTVoidSymbol(@SuppressWarnings("unused") TVoidSymbol node)
    {
        this.index = 10;
    }

    @Override
    public void caseTIntSymbol(@SuppressWarnings("unused") TIntSymbol node)
    {
        this.index = 11;
    }

    @Override
    public void caseTDoubleSymbol(@SuppressWarnings("unused") TDoubleSymbol node)
    {
        this.index = 12;
    }

    @Override
    public void caseTStringSymbol(@SuppressWarnings("unused") TStringSymbol node)
    {
        this.index = 13;
    }

    @Override
    public void caseTBoolSymbol(@SuppressWarnings("unused") TBoolSymbol node)
    {
        this.index = 14;
    }

    @Override
    public void caseTIfSymbol(@SuppressWarnings("unused") TIfSymbol node)
    {
        this.index = 15;
    }

    @Override
    public void caseTElseSymbol(@SuppressWarnings("unused") TElseSymbol node)
    {
        this.index = 16;
    }

    @Override
    public void caseTWhileSymbol(@SuppressWarnings("unused") TWhileSymbol node)
    {
        this.index = 17;
    }

    @Override
    public void caseTIntLiteral(@SuppressWarnings("unused") TIntLiteral node)
    {
        this.index = 18;
    }

    @Override
    public void caseTDoubleLiteral(@SuppressWarnings("unused") TDoubleLiteral node)
    {
        this.index = 19;
    }

    @Override
    public void caseTStringLiteral(@SuppressWarnings("unused") TStringLiteral node)
    {
        this.index = 20;
    }

    @Override
    public void caseTBoolLiteral(@SuppressWarnings("unused") TBoolLiteral node)
    {
        this.index = 21;
    }

    @Override
    public void caseTIdentifier(@SuppressWarnings("unused") TIdentifier node)
    {
        this.index = 22;
    }

    @Override
    public void caseTPlus(@SuppressWarnings("unused") TPlus node)
    {
        this.index = 23;
    }

    @Override
    public void caseTMinus(@SuppressWarnings("unused") TMinus node)
    {
        this.index = 24;
    }

    @Override
    public void caseTMult(@SuppressWarnings("unused") TMult node)
    {
        this.index = 25;
    }

    @Override
    public void caseTDiv(@SuppressWarnings("unused") TDiv node)
    {
        this.index = 26;
    }

    @Override
    public void caseTMod(@SuppressWarnings("unused") TMod node)
    {
        this.index = 27;
    }

    @Override
    public void caseTEquals(@SuppressWarnings("unused") TEquals node)
    {
        this.index = 28;
    }

    @Override
    public void caseTCmpEquals(@SuppressWarnings("unused") TCmpEquals node)
    {
        this.index = 29;
    }

    @Override
    public void caseTCmpSmaller(@SuppressWarnings("unused") TCmpSmaller node)
    {
        this.index = 30;
    }

    @Override
    public void caseTCmpGreater(@SuppressWarnings("unused") TCmpGreater node)
    {
        this.index = 31;
    }

    @Override
    public void caseTCmpEqualsSmaller(@SuppressWarnings("unused") TCmpEqualsSmaller node)
    {
        this.index = 32;
    }

    @Override
    public void caseTCmpEqualsGreater(@SuppressWarnings("unused") TCmpEqualsGreater node)
    {
        this.index = 33;
    }

    @Override
    public void caseTCmpNotEquals(@SuppressWarnings("unused") TCmpNotEquals node)
    {
        this.index = 34;
    }

    @Override
    public void caseTLogicalOr(@SuppressWarnings("unused") TLogicalOr node)
    {
        this.index = 35;
    }

    @Override
    public void caseTLogicalAnd(@SuppressWarnings("unused") TLogicalAnd node)
    {
        this.index = 36;
    }

    @Override
    public void caseTLogicalNot(@SuppressWarnings("unused") TLogicalNot node)
    {
        this.index = 37;
    }

    @Override
    public void caseTLeftBrace(@SuppressWarnings("unused") TLeftBrace node)
    {
        this.index = 38;
    }

    @Override
    public void caseTRightBrace(@SuppressWarnings("unused") TRightBrace node)
    {
        this.index = 39;
    }

    @Override
    public void caseTLeftBracket(@SuppressWarnings("unused") TLeftBracket node)
    {
        this.index = 40;
    }

    @Override
    public void caseTRightBracket(@SuppressWarnings("unused") TRightBracket node)
    {
        this.index = 41;
    }

    @Override
    public void caseTLeftParenthesis(@SuppressWarnings("unused") TLeftParenthesis node)
    {
        this.index = 42;
    }

    @Override
    public void caseTRightParenthesis(@SuppressWarnings("unused") TRightParenthesis node)
    {
        this.index = 43;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 44;
    }

    @Override
    public void caseTSemicolon(@SuppressWarnings("unused") TSemicolon node)
    {
        this.index = 45;
    }

    @Override
    public void caseTDot(@SuppressWarnings("unused") TDot node)
    {
        this.index = 46;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 47;
    }
}
